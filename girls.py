"""
Description:
Лучшие друзья девушек - это фуллерены.
Ограничения по времени: 3 секунды
Ограничения памяти: 64 мб
Ввод: стандартный ввод или input.txt
Вывод: стандартный вывод или output.txt

Развитие химической науки привела к тому, что высшие фулерены (сложные молекулы углерода
в виде шарика или продолговатой трубки) стали недорогими в производстве. Благодаря
своим уникальным оптическим свойствам они нашли свое место и в ювелирной промышленности.
Была выпущена уникальная коллекция украшений из них. Украшение продается в виде набора трубки-
фуллеренов различной длины, из которых можно составить украшение самостоятельно.
Норма Джин очень любит углеродные соединения и купила себе набор. Ее фирменный стиль состоит в
том, чтобы носить украшения, составленнные ровно из трех трубок фуллерена, причем в результате
должен получаться тупоугольный треугольник. Нельзя повторять украшения.
Помогите Норме Джин узнать, сколько вечеров она сможет посетить с имеющимися у нее набором
трубок. Фуллереновые трубки одинаковой длины считаются различными. Треугольники считаются различными,
если они отличаются хотя бы одной трубкой. Треугольники, состоящие из одних и тех же трубок
считаются одинаковыми независимо от порядка трубок.

Формат ввода: первая строка входного файла содержит число N (от 1 до 5000 включительно с обеих сторон) -
количество трубок в наборе.
Вторая строка содержит N упорядоченных по возрастанию чисел Li (1<=Li<=2 * 10^9)
Формат вывода: 1 инт число - количество вечеров
"""
from random import randint


def solution(number, tubes):
    answer = 0
    for i in range(number):
        l = i + 2
        r = i + 2
        for j in range(i + 1, number):
            while l < number and tubes[i] ** 2 + tubes[j] ** 2 >= tubes[l] ** 2:
                l += 1
            while r < number and tubes[i] + tubes[j] > tubes[r]:
                r += 1
            answer += r - l
    return answer


""" Test 1
while True:
    n = 4
    tubes = []
    for i in range(n):
        tubes.append(randint(1, 10))
    tubes.sort()
    print(*tubes)
    answerTest = solution(n, tubes)
"""

first = int(input())
tubes = list(map(int, input().split()))
print(solution(first, tubes))
